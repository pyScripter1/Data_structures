# Круговой связанный список похож на одно- или двусвязный список, в котором первый узел,
# «голова», и последний узел, «хвост», соединены.
#
# В одно- или двусвязных списках мы можем найти начало и конец списка,
# просто проверив, являются ли ссылки пустыми .
# Но для циклических связанных списков требуется более сложный
# код для явной проверки начальных и конечных узлов в определенных приложениях.
#
# Кольцевые связанные списки хороши для списков, которые необходимо просматривать непрерывно.

class Node: # класс узел, узле хранит данные и указатель на следующий узел
    def __init__(self, data):
        self.data = data
        self.next = None

def print_linked_list(head): # обход односвязанного списка
    current_node = head
    while current_node:
        print(current_node.data, end="->")
        current_node = current_node.next
    print()


node1 = Node(5)
node2 = Node(11)
node3 = Node(2)
node4 = Node(9)

node1.next = node2
node2.next = node3
node3.next = node4
node4.next = node1

# print_linked_list(node1) - бесконечный связанный список